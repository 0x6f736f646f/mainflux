version: v1.0
name: CI Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
auto_cancel:
  running:
    when: branch != 'master'
global_job_config:
  prologue:
    commands:
      - checkout
      - sem-version go 1.20
blocks:
  - name: Setup
    dependencies: []
    task:
      jobs:
        - name: Setup Codecov
          commands:
            - 'curl -Os https://uploader.codecov.io/latest/linux/codecov'
            - chmod +x codecov
            - ./codecov
            - cache store codecov ./codecov
        - name: Setup Golangci-lint
          commands:
            - 'curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.53.3'
            - cache store linter ./bin/golangci-lint
  - name: Check Generated Protocol Buffer Files
    dependencies: []
    run:
      when: 'change_in([''/things/policies/auth.proto'', ''/users/policies/auth.proto'', ''pkg/messaging/message.proto''], {pipeline_file: ''ignore''})'
    task:
      jobs:
        - commands:
            - |
              setup_protoc() {
                PROTOC_VERSION=23.3
                PROTOC_GEN_VERSION=v1.31.0
                PROTOC_GRPC_VERSION=v1.3.0
                PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip

                curl -0L https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP -o $PROTOC_ZIP
                unzip -o $PROTOC_ZIP -d protoc3
                sudo mv protoc3/bin/* /usr/local/bin/
                sudo mv protoc3/include/* /usr/local/include/
                rm -rf $PROTOC_ZIP protoc3

                go install google.golang.org/protobuf/cmd/protoc-gen-go@$PROTOC_GEN_VERSION
                go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$PROTOC_GRPC_VERSION
                
                export PATH=$PATH:/usr/local/bin/protoc
                export PATH=$PATH:$HOME/go/bin
              }
            - setup_protoc
            - |
              check_files() {
                echo "Setting up Mainflux..."
                for p in $(ls users/policies/*.pb.go); do
                    mv $p $p.tmp
                done
               for p in $(ls things/policies/*.pb.go); do
                    mv $p $p.tmp
                done                
                for p in $(ls pkg/messaging/*.pb.go); do
                    mv $p $p.tmp
                done
                protoc -I. --go_out=. --go_opt=paths=source_relative pkg/messaging/*.proto
                protoc -I. --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative users/policies/*.proto
                protoc -I. --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative things/policies/*.proto
                for p in $(ls users/policies/*.pb.go); do
                    if ! cmp -s $p $p.tmp; then
                        echo "Proto file and generated Go file $p are out of sync!"
                        exit 1
                    fi
                done
                for p in $(ls things/policies/*.pb.go); do
                    if ! cmp -s $p $p.tmp; then
                        echo "Proto file and generated Go file $p are out of sync!"
                        exit 1
                    fi
                done                
                for p in $(ls pkg/messaging/*.pb.go); do
                    if ! cmp -s $p $p.tmp; then
                        echo "Proto file and generated Go file $p are out of sync!"
                        exit 1
                    fi
                done
              }
            - check_files
          name: Check Generated Protocol Buffer Files
  - name: Lint and Test Users
    run:
      when: 'change_in(''/users'', {pipeline_file: ''ignore''}) || change_in(''/cmd/users'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Users
          commands:
            - cd users
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Users
          commands:
            - cd users
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Users
    dependencies:
      - Lint and Test Users
    run:
      when: 'change_in(''/users'', {pipeline_file: ''ignore''}) || change_in(''/cmd/users'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Users
          commands: []
        - commands:
            - make users
          name: Nameless 2
  - name: Lint and Test Things
    run:
      when: 'change_in(''/things'', {pipeline_file: ''ignore''}) || change_in(''/cmd/things'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Things
          commands:
            - cd things
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Things
          commands:
            - cd things
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Things
    dependencies:
      - Lint and Test Things
    run:
      when: 'change_in(''/things'', {pipeline_file: ''ignore''}) || change_in(''/cmd/things'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Things
          commands: []
        - commands:
            - make things
          name: Nameless 2
  - name: Lint and Test CoAP
    run:
      when: 'change_in(''/coap'', {pipeline_file: ''ignore''}) || change_in(''/cmd/coap'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint CoAP
          commands:
            - cd coap
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test CoAP
          commands:
            - cd coap
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build CoAP
    dependencies:
      - Lint and Test CoAP
    run:
      when: 'change_in(''/coap'', {pipeline_file: ''ignore''}) || change_in(''/cmd/coap'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build CoAP
          commands: []
        - commands:
            - make coap
          name: Nameless 2
  - name: Lint and Test HTTP
    run:
      when: 'change_in(''/http'', {pipeline_file: ''ignore''}) || change_in(''/cmd/http'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint HTTP
          commands:
            - cd http
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test HTTP
          commands:
            - cd http
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build HTTP
    dependencies:
      - Lint and Test HTTP
    run:
      when: 'change_in(''/http'', {pipeline_file: ''ignore''}) || change_in(''/cmd/http'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build HTTP
          commands: []
        - commands:
            - make http
          name: Nameless 2
  - name: Lint and Test MQTT
    run:
      when: 'change_in(''/mqtt'', {pipeline_file: ''ignore''}) || change_in(''/cmd/mqtt'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint MQTT
          commands:
            - cd mqtt
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test MQTT
          commands:
            - cd mqtt
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build MQTT
    dependencies:
      - Lint and Test MQTT
    run:
      when: 'change_in(''/mqtt'', {pipeline_file: ''ignore''}) || change_in(''/cmd/mqtt'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build MQTT
          commands: []
        - commands:
            - make mqtt
          name: Nameless 2
  - name: Lint and Test WS
    run:
      when: 'change_in(''/ws'', {pipeline_file: ''ignore''}) || change_in(''/cmd/ws'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint WS
          commands:
            - cd ws
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test WS
          commands:
            - cd ws
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build WS
    dependencies:
      - Lint and Test WS
    run:
      when: 'change_in(''/ws'', {pipeline_file: ''ignore''}) || change_in(''/cmd/ws'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build WS
          commands: []
        - commands:
            - make ws
          name: Nameless 2
  - name: Lint and Test Bootstrap
    run:
      when: 'change_in(''/bootstrap'', {pipeline_file: ''ignore''}) || change_in(''/cmd/bootstrap'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Bootstrap
          commands:
            - cd bootstrap
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Bootstrap
          commands:
            - cd bootstrap
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Bootstrap
    dependencies:
      - Lint and Test Bootstrap
    run:
      when: 'change_in(''/bootstrap'', {pipeline_file: ''ignore''}) || change_in(''/cmd/bootstrap'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Bootstrap
          commands: []
        - commands:
            - make bootstrap
          name: Nameless 2
  - name: Lint and Test Certs
    run:
      when: 'change_in(''/certs'', {pipeline_file: ''ignore''}) || change_in(''/cmd/certs'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Certs
          commands:
            - cd certs
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Certs
          commands:
            - cd certs
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Certs
    dependencies:
      - Lint and Test Certs
    run:
      when: 'change_in(''/certs'', {pipeline_file: ''ignore''}) || change_in(''/cmd/certs'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Certs
          commands: []
        - commands:
            - make certs
          name: Nameless 2
  - name: Lint and Test Provision
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    run:
      when: 'change_in(''/provision'', {pipeline_file: ''ignore''}) || change_in(''/cmd/provision'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Lint Provision
          commands:
            - cd provision
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Provision
          commands:
            - cd provision
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Provision
    dependencies:
      - Lint and Test Provision
    run:
      when: 'change_in(''/provision'', {pipeline_file: ''ignore''}) || change_in(''/cmd/provision'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Provision
          commands: []
        - commands:
            - make provision
          name: Nameless 2
  - name: Lint and Test Twins
    run:
      when: 'change_in(''/twins'', {pipeline_file: ''ignore''}) || change_in(''/cmd/twins'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Twins
          commands:
            - cd twins
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Twins
          commands:
            - cd twins
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Twins
    dependencies:
      - Lint and Test Twins
    run:
      when: 'change_in(''/twins'', {pipeline_file: ''ignore''}) || change_in(''/cmd/twins'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Twins
          commands: []
        - commands:
            - make twins
          name: Nameless 2
  - name: Lint and Test Readers
    run:
      when: 'change_in(''/readers'', {pipeline_file: ''ignore''}) || change_in(''/cmd/cassandra-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/influxdb-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/mongodb-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/postgres-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/timescale-reader'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Readers
          commands:
            - cd readers
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Twins
          commands:
            - cd readers
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Readers
    dependencies:
      - Lint and Test Readers
    run:
      when: 'change_in(''/readers'', {pipeline_file: ''ignore''}) || change_in(''/cmd/cassandra-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/influxdb-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/mongodb-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/postgres-reader'', {pipeline_file: ''ignore''}) || change_in(''/cmd/timescale-reader'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build Readers
          commands: []
        - commands:
            - make cassandra-reader
            - make influxdb-reader
            - make mongodb-reader
            - make postgres-reader
            - make timescale-reader
          name: Nameless 2
  - name: Lint and Test Consumers
    run:
      when: >-
        change_in('/consumers', {pipeline_file: 'ignore'}) || change_in('/cmd/cassandra-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/influxdb-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/mongodb-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/postgres-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/timescale-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/smpp-notifier', {pipeline_file: 'ignore'}) || change_in('/cmd/smtp-notifier', {pipeline_file:
        'ignore'})
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Consumers
          commands:
            - cd consumers
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Consumers
          commands:
            - cd consumers
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build Consumers
    dependencies:
      - Lint and Test Consumers
    run:
      when: >-
        change_in('/consumers', {pipeline_file: 'ignore'}) || change_in('/cmd/cassandra-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/influxdb-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/mongodb-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/postgres-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/timescale-reader', {pipeline_file: 'ignore'}) || change_in('/cmd/smpp-notifier', {pipeline_file: 'ignore'}) || change_in('/cmd/smtp-notifier', {pipeline_file:
        'ignore'})
    task:
      jobs:
        - name: Build Consumers
          commands: []
        - commands:
            - make cassandra-writer
            - make influxdb-writer
            - make mongodb-writer
            - make postgres-writer
            - make timescale-writer
            - make smpp-notifier
            - make smtp-notifier
          name: Nameless 2
  - name: Lint and Test CLI
    run:
      when: 'change_in(''/cli'', {pipeline_file: ''ignore''}) || change_in(''/cmd/cli'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint CLI
          commands:
            - cd cli
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test CLI
          commands:
            - cd cli
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build CLI
    dependencies:
      - Lint and Test CLI
    run:
      when: 'change_in(''/cli'', {pipeline_file: ''ignore''}) || change_in(''/cmd/cli'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build CLI
          commands: []
        - commands:
            - make cli
          name: Nameless 2
  - name: Lint and Test LoRa
    run:
      when: 'change_in(''/lora'', {pipeline_file: ''ignore''}) || change_in(''/cmd/lora'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint LoRa
          commands:
            - cd lora
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test LoRa
          commands:
            - cd lora
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build LoRa
    dependencies:
      - Lint and Test LoRa
    run:
      when: 'change_in(''/lora'', {pipeline_file: ''ignore''}) || change_in(''/cmd/lora'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build LoRa
          commands: []
        - commands:
            - make lora
          name: Nameless 2
  - name: Lint and Test OPC-UA
    run:
      when: 'change_in(''/opcua'', {pipeline_file: ''ignore''}) || change_in(''/cmd/opcua'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint OPC-UA
          commands:
            - cd opcua
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test OPC-UA
          commands:
            - cd opcua
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Build OPC-UA
    dependencies:
      - Lint and Test OPC-UA
    run:
      when: 'change_in(''/opcua'', {pipeline_file: ''ignore''}) || change_in(''/cmd/opcua'', {pipeline_file: ''ignore''})'
    task:
      jobs:
        - name: Build OPC-UA
          commands: []
        - commands:
            - make opcua
          name: Nameless 2
  - name: Lint and Test Internal
    run:
      when: 'change_in(''/internal'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Internal
          commands:
            - cd internal
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Internal
          commands:
            - cd internal
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Lint and Test Logger
    run:
      when: 'change_in(''/logger'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Logger
          commands:
            - cd logger
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Logger
          commands:
            - cd logger
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Lint and Test PKG
    run:
      when: 'change_in(''/pkg'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint PKG
          commands:
            - cd pkg
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test PKG
          commands:
            - cd pkg
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Lint and Test Tools
    run:
      when: 'change_in(''/tools'', {pipeline_file: ''ignore''})'
    dependencies:
      - Setup
      - Check Generated Protocol Buffer Files
    task:
      jobs:
        - name: Lint Tools
          commands:
            - cd tools
            - cache restore linter
            - './bin/golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
        - name: Test Tools
          commands:
            - cd tools
            - go test ./... --race -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html
            - cache restore codecov
            - ./codecov
  - name: Test all
    dependencies:
      - Setup
    run:
      when: branch = 'master'
    task:
      jobs:
        - name: Test all
          commands: []
        - commands:
            - make test
          name: Nameless 2
        - name: Build all
          commands: []
        - commands:
            - make proto
            - make all
            - make -j$NPROC latest
          name: Nameless 4
        - name: Push all
          commands: []
        - commands:
            - make push
          name: Nameless 6
  - name: Compile Check For RabbitMQ
    dependencies:
      - Setup
    task:
      jobs:
        - name: Compile For RabbitMQ
          commands: []
        - commands:
            - make proto
            - MF_BROKER_TYPE=rabbitmq make mqtt
          name: Nameless 2
